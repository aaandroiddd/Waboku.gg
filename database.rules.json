{
  "rules": {
    ".read": false,
    ".write": false,
    
    "connection_tests": {
      ".read": "auth != null",
      ".write": "auth != null"
    },

    "users": {
      "$userId": {
        ".read": "$userId === auth.uid",
        ".write": "$userId === auth.uid",

        "username": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 20"
        },
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 30"
        },
        "userAvatar": {
          ".validate": "!newData.exists() || (newData.isString() && newData.val().length <= 300)"
        },
        "bio": {
          ".validate": "newData.isString() && newData.val().length <= 150"
        },
        "location": {
          ".validate": "newData.isString() && newData.val().length <= 100"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && !data.exists()"
        },
        "stripeCustomerId": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "subscriptionId": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },

        "$other": {
          ".validate": false
        }
      }
    },

    "listings": {
      "$listingId": {
        ".read": true,
        ".write": "auth != null && (newData.exists() ? newData.child('sellerId').val() === auth.uid : data.child('sellerId').val() === auth.uid)",

        "sellerId": {
          ".validate": "newData.val() === auth.uid"
        },
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length <= 1000"
        },
        "price": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "condition": {
          ".validate": "newData.isString() && (newData.val() === 'mint' || newData.val() === 'near mint' || newData.val() === 'excellent' || newData.val() === 'good' || newData.val() === 'lightly played' || newData.val() === 'played' || newData.val() === 'poor')"
        },
        "game": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "cardSet": {
          ".validate": "newData.isString()"
        },
        "cardRarity": {
          ".validate": "newData.isString()"
        },
        "cardNumber": {
          ".validate": "newData.isString()"
        },
        "quantity": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "location": {
          ".validate": "newData.isString() && newData.val().length <= 100"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && !data.exists()"
        },
        "updatedAt": {
          ".validate": "newData.isNumber()"
        },

        "$other": {
          ".validate": false
        }
      }
    },

    "chats": {
      "$chatId": {
        ".read": "auth != null && (!data.exists() || data.child('participants').child(auth.uid).exists())",
        ".write": "auth != null && (!data.exists() || data.child('participants').child(auth.uid).exists())",

        "participants": {
          ".validate": "newData.hasChildren() && newData.child(auth.uid).exists()"
        },
        "lastMessage": {
          ".validate": "newData.isString() && newData.val().length <= 1000"
        },
        "lastUpdated": {
          ".validate": "newData.isNumber()"
        },

        "$other": {
          ".validate": false
        }
      }
    },

    "messages": {
      ".indexOn": ["timestamp", "chatId"],
      "$chatId": {
        ".read": "auth != null && (root.child('chats').child($chatId).child('participants').child(auth.uid).exists() || !root.child('chats').child($chatId).exists())",
        ".write": "auth != null && root.child('chats').child($chatId).child('participants').child(auth.uid).exists()",

        "$messageId": {
          ".validate": "newData.hasChildren(['senderId', 'receiverId', 'content', 'timestamp', 'type'])",

          "senderId": {
            ".validate": "newData.val() === auth.uid"
          },
          "receiverId": {
            ".validate": "newData.isString() && root.child('chats').child($chatId).child('participants').child(newData.val()).exists()"
          },
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 2000"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'text' || newData.val() === 'image' || newData.val() === 'system')"
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now"
          },
          "listingId": {
            ".validate": "!newData.exists() || (newData.isString() && root.child('listings').child(newData.val()).exists())"
          },
          "read": {
            ".validate": "newData.isBoolean()"
          },

          "$other": {
            ".validate": false
          }
        }
      }
    },

    "searchTerms": {
      ".read": true,
      ".write": "auth != null"
    },

    "wanted": {
      "$postId": {
        ".read": true,
        ".write": "auth != null && (newData.exists() ? newData.child('userId').val() === auth.uid : data.child('userId').val() === auth.uid)",

        "userId": {
          ".validate": "newData.val() === auth.uid"
        },
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length <= 1000"
        },
        "game": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "cardSet": {
          ".validate": "newData.isString()"
        },
        "cardRarity": {
          ".validate": "newData.isString()"
        },
        "cardNumber": {
          ".validate": "newData.isString()"
        },
        "quantity": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "location": {
          ".validate": "newData.isString() && newData.val().length <= 100"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && !data.exists()"
        },
        "updatedAt": {
          ".validate": "newData.isNumber()"
        },

        "$other": {
          ".validate": false
        }
      }
    },

    "wantedPosts": {
      "$postId": {
        ".read": true,
        ".write": "auth != null && (newData.exists() ? newData.child('userId').val() === auth.uid : data.child('userId').val() === auth.uid)",

        "userId": {
          ".validate": "newData.val() === auth.uid"
        },
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length <= 1000"
        },
        "game": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "cardSet": {
          ".validate": "newData.isString()"
        },
        "cardRarity": {
          ".validate": "newData.isString()"
        },
        "cardNumber": {
          ".validate": "newData.isString()"
        },
        "quantity": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "location": {
          ".validate": "newData.isString() && newData.val().length <= 100"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && !data.exists()"
        },
        "updatedAt": {
          ".validate": "newData.isNumber()"
        },

        "$other": {
          ".validate": false
        }
      }
    }
  }
}
