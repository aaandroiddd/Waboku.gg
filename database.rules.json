{
  "rules": {
    "searches": {
      ".read": true,
      ".write": true,
      ".indexOn": ["timestamp"],
      "$searchId": {
        ".validate": "newData.hasChildren(['term', 'timestamp'])",
        "term": {
          ".validate": "newData.isString() && newData.val().length >= 2 && newData.val().length <= 50"
        },
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('account').child('tier').val() === 'admin')",
        ".write": "auth != null && (auth.uid === $uid || auth.token.admin === true)",
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[A-Za-z]{2,}$/)"
        },
        "displayName": {
          ".validate": "newData.isString() && newData.val().length >= 3 && newData.val().length <= 50"
        },
        "account": {
          ".validate": "newData.hasChildren(['tier'])",
          "tier": {
            ".validate": "newData.isString() && (newData.val() === 'free' || newData.val() === 'premium' || newData.val() === 'admin')"
          },
          "status": {
            ".validate": "newData.isString() && newData.val().length <= 100"
          },
          "stripeCustomerId": {
            ".validate": "!newData.exists() || newData.isString()"
          },
          "subscriptionId": {
            ".validate": "!newData.exists() || newData.isString()"
          },
          "lastUpdated": {
            ".validate": "newData.isNumber() && newData.val() <= now"
          },
          "$other": {
            ".validate": false
          }
        }
      }
    },

    "listings": {
      ".indexOn": ["createdAt", "userId", "status"],
      "$listingId": {
        ".read": "auth != null",
        ".write": "auth != null && (!data.exists() || data.child('userId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['userId', 'title', 'price', 'status', 'createdAt'])",
        "userId": {
          ".validate": "newData.val() === auth.uid"
        },
        "title": {
          ".validate": "newData.isString() && newData.val().length >= 3 && newData.val().length <= 200"
        },
        "price": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() === 'active' || newData.val() === 'sold' || newData.val() === 'deleted')"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && (!data.exists() || data.val() === newData.val()) && newData.val() <= now"
        }
      }
    },

    "messages": {
      ".read": "auth != null",
      ".write": "auth != null",
      ".indexOn": ["timestamp", "chatId"],
      "$chatId": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$messageId": {
          ".validate": "newData.hasChildren(['senderId', 'receiverId', 'content', 'timestamp', 'type'])",
          "senderId": {
            ".validate": "newData.val() === auth.uid"
          },
          "receiverId": {
            ".validate": "newData.isString()"
          },
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 2000"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'text' || newData.val() === 'image' || newData.val() === 'system')"
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now"
          },
          "listingId": {
            ".validate": "!newData.exists() || newData.isString()"
          },
          "read": {
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },

    "chats": {
      ".read": "auth != null",
      ".write": "auth != null",
      ".indexOn": ["createdAt", "participants"],
      "$chatId": {
        ".read": "auth != null",
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['participants', 'createdAt'])",
        "participants": {
          "$uid": {
            ".validate": "newData.isBoolean()"
          }
        },
        "deletedBy": {
          "$uid": {
            ".validate": "auth != null && $uid === auth.uid"
          }
        },
        "lastMessage": {
          "senderId": {
            ".validate": "newData.isString()"
          },
          "receiverId": {
            ".validate": "newData.isString()"
          },
          "content": {
            ".validate": "newData.isString() && newData.val().length <= 2000"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'text' || newData.val() === 'image' || newData.val() === 'system')"
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now"
          }
        },
        "listingId": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "listingTitle": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && (!data.exists() || data.val() === newData.val()) && newData.val() <= now"
        }
      }
    },

    "userStatus": {
      ".indexOn": ["lastSeen"],
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid == $uid",
        ".validate": "newData.hasChildren(['status', 'lastSeen'])",
        "status": {
          ".validate": "newData.isString() && newData.val().length <= 100 && (newData.val() === 'online' || newData.val() === 'away' || newData.val() === 'offline' || newData.val() === 'busy')"
        },
        "lastSeen": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "$other": {
          ".validate": false
        }
      }
    },

    "typing": {
      "$chatId": {
        "$uid": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid == $uid",
          ".validate": "newData.isBoolean()"
        }
      }
    },

    "lastActive": {
      ".indexOn": [".value"],
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid == $uid",
        ".validate": "newData.isNumber() && newData.val() <= now"
      }
    },

    "$other": {
      ".validate": false
    }
  }
}