service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Allow read access to usernames collection for everyone
    match /usernames/{username} {
      allow read: if true;
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.username is string
        && request.resource.data.createdAt is string;
      allow delete: if isOwner(resource.data.userId);
    }

    // Listings collection rules
    match /listings/{listingId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.userId);
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    // Messages
    match /messages/{messageId} {
      allow read: if isAuthenticated() 
        && (resource.data.senderId == request.auth.uid 
            || resource.data.receiverId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() 
        && resource.data.senderId == request.auth.uid;
    }

    // Favorites collection rules
    match /favorites/{favoriteId} {
      allow read: if true;
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
    }

    // Default rule - deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}